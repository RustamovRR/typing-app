// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TypingContent {
  id           Int            @id @default(autoincrement())
  title        String
  content      String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now()) @updatedAt
  duration     Int
  difficulty   Difficulty
  category     String?
  isActive     Boolean?       @default(true)
  userProgress UserProgress[]
}

model UserProgress {
  id              Int       @id @default(autoincrement())
  userId          Int
  typingContentId Int
  completedAt     DateTime?
  accuracy        Float
  wpm             Int
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now()) @updatedAt

  TypingContent TypingContent @relation(fields: [typingContentId], references: [id])
  User          User          @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([typingContentId])
}

model User {
  id        Int            @id @default(autoincrement())
  username  String?        @unique
  email     String         @unique
  fullName  String?
  password  String
  createdAt DateTime       @default(now())
  updatedAt DateTime       @default(now()) @updatedAt
  progress  UserProgress[]
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}
